// Generated by CoffeeScript 1.7.1
define(['jquery', 'me', 'utils', 'ehbs!templates/tests/tests.index', 'ehbs!templates/tests/tests.review', 'ehbs!templates/tests/tests.new'], function($, me, u) {
  var TestsRoute;
  return TestsRoute = {
    setup: function(App) {
      App.Router.map(function() {
        return this.resource('tests', function() {
          this.route('new');
          return this.route('review');
        });
      });
      App.TestsReviewRoute = Ember.Route.extend({
        queryParams: {
          tests: {
            refreshModel: true,
            replace: true
          }
        },
        model: function(params) {
          return this.store.find('test', {
            ids: params.tests
          });
        }
      });
      App.TestsReviewController = Ember.ArrayController.extend({
        queryParams: ['tests'],
        tabs: (function() {
          var counter, i, match, tab, tabs, tests, _i, _ref;
          tests = this.get('model');
          if (tests == null) {
            return [];
          }
          tabs = [];
          counter = 0;
          match = ['A', 'B', 'C'];
          for (i = _i = 0, _ref = tests.get('length'); 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
            tab = {
              name: 'Test ' + match[counter],
              id: 't-' + match[counter],
              link: '#t-' + match[counter],
              test: tests.content[counter],
              active: false
            };
            if (counter === 0) {
              tab.active = true;
            }
            if (counter === 0) {
              this.send('switch', tests.content[counter]);
            }
            tabs.push(tab);
            counter++;
          }
          return tabs;
        }).property('model'),
        actions: {
          "switch": function(test) {
            this.set('test', test);
            this.set('settings', JSON.stringify(test.get('settings')));
            return false;
          },
          save: function() {
            return false;
          },
          publish: function(test) {
            var settings, thiz;
            thiz = this;
            settings = this.get('settings');
            if (settings == null) {
              settings = {};
            } else {
              settings = JSON.parse(settings);
            }
            test.set('settings', settings);
            test.set('public', true);
            test.save().then(function(result) {
              return true;
            }, function(errors) {
              alert(errors.responseText);
              return false;
            });
            return false;
          }
        }
      });
      return App.QuestionItemView = Ember.View.extend({
        didInsertElement: function() {
          var element;
          this._super();
          element = this.get('element');
          return MathJax.Hub.Queue(['Typeset', MathJax.Hub, element]);
        }
      });
    }
  };
});


/*
			App.TestsReviewController = Ember.ArrayController.extend
				itemController: 'testReview'
				actions:
					switch: (test) ->
						return false
					save: ->
						return false

			App.TestReviewController = Ember.ObjectController.extend
				needs: 'testsReview'
 */
