// Generated by CoffeeScript 1.8.0
var Schema, me, moment;

me = require('mongo-ember');

moment = require('moment');

Schema = me.Schema;

module.exports = {
  Test: {
    schema: {
      name: {
        type: String,
        required: true
      },
      questions: {
        type: [Schema.Types.Mixed],
        "default": []
      },
      note: {
        type: String,
        "default": ''
      },
      "public": {
        type: Boolean,
        "default": false
      },
      school: {
        type: Schema.Types.ObjectId,
        ref: 'School',
        required: true
      },
      subject: {
        type: String,
        required: true
      },
      course: {
        type: String,
        required: true
      },
      creator: {
        type: Schema.Types.ObjectId,
        ref: 'User'
      },
      createdTime: {
        type: Date,
        "default": null
      },
      lastModifiedTime: {
        type: Date,
        "default": null
      }
    },
    validationMessages: {
      name: {
        required: 'Name cannot be empty'
      },
      school: {
        required: 'School cannot be empty'
      },
      subject: {
        required: 'subject cannot be empty'
      },
      course: {
        required: 'course cannot be empty'
      }
    },
    before: {
      c: function(test, user, cb) {
        var time;
        if (user == null) {
          return cb(new Error('No user is present'));
        }
        time = moment().toDate();
        test.creator = me.ObjectId(user._id);
        test.createdTime = time;
        test.lastModifiedTime = time;
        console.log(test);
        return cb(null, test);
      }
    }
  }
};
